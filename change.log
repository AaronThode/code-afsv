New Windows package built

New build of Mac App

Introduced user name into notes file name creation
Added ability to load multiple appropriate notes files simultaneously, merging and sorting results.
output is not saved to file automatically, and user name is set to 'merged' for the file name
File name creation is now unique, e.g. *notes-jit.mat will not be overwritten unless I loaded it individually to begin with
instead, new note called *notes-jit-1.mat is created - # is incremented accordingly.
User is now prompted to save existing notes if there are unsaved changes when a new data file or folder selected.

Changed open menu file selection to explicitly filter for all supported files, instead of just all files (*.*)
Should help prevent accidental selection of unsupported files, which while caught and accounted for, is unnecessary extra work
Also changed file extension filter separated to ';' from ',', because I think it's not supported on windows - which may be why Lexi couldn't open any files.

fixed audio progress bar to account for scaled speed playback

Added first and last buttons to notes navigation pane

Added speed scaling options to audio playback
fixed issue with audio progress bars not being deleted from plot in same time-window

Removed hard limit on window size and added sanity check instead

Moved default template creation into load_notes subroutine

Converted all note fields to be strings (more generality), except for start_time
Added script to check and convert existing notes if needed on loading

Implemented peak and noise db calculations for notes

Changed several button calls to use notes-folder as default location for saving
instead of working directory (which is Function folder in matlab, or Desktop in compiled application).

Worked through and fixed/ignored all MLINT warnings
Usually related to performance recommendations or deprecated functions

Modified startup script to use existing Matlab installation (as opposed to MCR)
easy enough to tell non matlab users to name their MCR folder accordingly

Added windows compiler project

Fixed a bunch of typos, and silly errors
Basic testing completed.
but I'm sure there are some fringe situations I didn't account for.

Made window length a variable, again to avoid constant references to GUI string
implemented prev and next note buttons
Now for testing...

replaced str2num with str2double, everywhere
event plotting routine finished
added lots of checks to enable/disable buttons appropriately

Fixed lots of issues with date objects:
1. Consistent tstart_date variable now used throughout, instead of constant reading from GUI date strings
2. Static date object now shows start date of current plot, is ONLY updated when Update is clicked
3. Slider increments now set in set_slider_controls instead of in callback, is now visualy correct upon new file load
4. Edit date string now only errors on invalid input, out of bounds values are clamped to either tmin or tmax
5. This also prevents out of bounds values being sent to slider - causing it to disappear

Disabled some general warnings about unused functions and variables

Simplified some notes routines, only some data needs to be passed back/forth
Also removed callback specific details from load_spegram_viewer function
hObject, events etc should be left to just callback functions
only the 'handles' object need be passed around
Even then, best to avoid - write functions to use just what they need

Added new event insertion and sorting routines

Added scratch file

Added edit and delete options to annotations
Completed implementation of generic edit window for Event types
New event button implementation complete
Edit to follow

Added code to disable update/next/prev buttons while window is updating

Added project files to create compiled mac app, as well as script to start application from terminal with the correct environment

Fixed error with notes.folder_name

Shell of new annotation interface included, but not fully implemented yet.

Moved FFT parameters into own sub panel

Lots of changes:
1. Reordered sub functions to separate GUIDE callbacks and custom helper functions into their own sections - makes it easier to browse the code.
2. Removed redundant code for audio playback of filtered or unfiltered segments
3. Compute filter button removed - filter parameters are recalculated automatically based on changed parameters - existing computed filter reused if nothing has changed.
2. Replaced Remez filtering with generic FIR version (remez* functions are being removed from matlab)
3. Added explicit filter frequency range checking, and 4 cases for specific low-pass, high-pass, band-pass, and full-pass (i.e. skip filtering) options
4. changed audio playback to use audioplayer object instead of soundsc, allowing for pause/resume functionality (implemented in GUI changes)
5. Also implemented progress bar within spectrogram, as requested by Kerri + interns.

Updated sample playback to use audio player device, in preparation for progress bar

Fixed cancel error in annotation function

Added previous/next buttons to increment start-time by window length

Improved file selection system, type detection based on extension, and removed radio-button selection list

Modified file selection and opening dialog box to comprehensive and integrated - no need to separately select file type before hand now.

Changed filetype string checking to be case independent

cleaned up unnecessary files

Initial commit with all the original files

